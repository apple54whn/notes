(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{566:function(a,e,t){"use strict";t.r(e);var v=t(2),_=Object(v.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1-conf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-conf"}},[a._v("#")]),a._v(" 1 Conf")]),a._v(" "),t("blockquote",[t("p",[a._v("本部分配置包含了大部分用户的常用配置，其中一部分为 MyBatis 原生所支持的配置。MP 版本为3.3.0")])]),a._v(" "),t("p",[a._v("只记录 Spring Boot 的配置，其他查看官方文档。基本方式如下：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mybatis-plus")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("config-location")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" \n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("configuration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("global-config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("db-config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("  \n")])])]),t("p",[a._v("如下配置按照层级来记录，具体配置名称会添加"),t("code",[a._v("-")])]),a._v(" "),t("h2",{attrs:{id:"configlocation✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configlocation✨"}},[a._v("#")]),a._v(" configLocation✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("MyBatis 配置文件位置，如果您有单独的 MyBatis 配置，请将其路径配置到 "),t("code",[a._v("configLocation")]),a._v(" 中，具体参考"),t("a",{attrs:{href:"http://www.mybatis.org/mybatis-3/zh/configuration.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("MyBatis 文档"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"checkconfiglocation✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkconfiglocation✨"}},[a._v("#")]),a._v(" checkConfigLocation✨")]),a._v(" "),t("blockquote",[t("p",[a._v("Spring Boot Only")])]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("false")])])]),a._v(" "),t("p",[a._v("启动时是否检查 MyBatis XML 文件的存在，默认不检查")]),a._v(" "),t("h2",{attrs:{id:"mapperlocations🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapperlocations🔥"}},[a._v("#")]),a._v(" mapperLocations🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String[]")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("[]")])])]),a._v(" "),t("p",[a._v("MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法(XML 中有自定义实现)，需要进行该配置，告诉 Mapper 所对应的 XML 文件位置")]),a._v(" "),t("blockquote",[t("p",[a._v("Maven 多模块项目的扫描路径需以 "),t("code",[a._v("classpath*:")]),a._v(" 开头 （即加载多个 jar 包下的 XML 文件）")])]),a._v(" "),t("h2",{attrs:{id:"typealiasespackage🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typealiasespackage🔥"}},[a._v("#")]),a._v(" typeAliasesPackage🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("MyBaits 别名包扫描路径，通过该属性可以给包中的"),t("strong",[a._v("domain类注册别名")]),a._v("，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名(即 XML 中调用的时候不用包含包名)")]),a._v(" "),t("h2",{attrs:{id:"typealiasessupertype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typealiasessupertype"}},[a._v("#")]),a._v(" typeAliasesSuperType")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Class")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("该配置请和 "),t("a",{attrs:{href:"#typealiasespackage%F0%9F%94%A5"}},[a._v("typeAliasesPackage")]),a._v(" 一起使用，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象")]),a._v(" "),t("h2",{attrs:{id:"typehandlerspackage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typehandlerspackage"}},[a._v("#")]),a._v(" typeHandlersPackage")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("TypeHandler 扫描路径，如果配置了该属性，SqlSessionFactoryBean 会把该包下面的类注册为对应的 TypeHandler")]),a._v(" "),t("blockquote",[t("p",[a._v("TypeHandler 通常用于自定义类型转换。")])]),a._v(" "),t("h2",{attrs:{id:"typeenumspackage✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typeenumspackage✨"}},[a._v("#")]),a._v(" typeEnumsPackage✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("枚举类扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性")]),a._v(" "),t("h2",{attrs:{id:"executortype✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#executortype✨"}},[a._v("#")]),a._v(" executorType✨")]),a._v(" "),t("blockquote",[t("p",[a._v("Spring Boot Only")])]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("ExecutorType")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("simple")])])]),a._v(" "),t("p",[a._v("通过该属性可指定 MyBatis 的执行器，MyBatis 的执行器总共有三种：")]),a._v(" "),t("ul",[t("li",[a._v("ExecutorType.SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句（PreparedStatement）")]),a._v(" "),t("li",[a._v("ExecutorType.REUSE：该执行器类型会复用预处理语句（PreparedStatement）")]),a._v(" "),t("li",[a._v("ExecutorType.BATCH：该执行器类型会批量执行所有的更新语句")])]),a._v(" "),t("h2",{attrs:{id:"configurationproperties✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configurationproperties✨"}},[a._v("#")]),a._v(" configurationProperties✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Properties")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("指定外部化 MyBatis Properties 配置，通过该配置可以"),t("strong",[a._v("抽离配置，实现不同环境的配置部署")])]),a._v(" "),t("h2",{attrs:{id:"configuration✨原生"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration✨原生"}},[a._v("#")]),a._v(" configuration✨原生")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Configuration")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("本部分（Configuration）的配置大都为 MyBatis 原生支持的配置，这意味着您可以通过 MyBatis XML 配置文件的形式进行配置。")]),a._v(" "),t("h3",{attrs:{id:"mapunderscoretocamelcase🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapunderscoretocamelcase🔥"}},[a._v("#")]),a._v(" mapUnderscoreToCamelCase🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("true")])])]),a._v(" "),t("p",[a._v("是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。")]),a._v(" "),t("blockquote",[t("p",[a._v("注意")]),a._v(" "),t("p",[a._v("此属性"),t("strong",[a._v("在 MyBatis 中原默认值为 false")]),a._v("，"),t("strong",[a._v("在 MyBatis-Plus 中为 true")]),a._v("，此属性也将用于生成最终的 SQL 的 select body")]),a._v(" "),t("p",[a._v("如果您的数据库命名符合规则无需使用 "),t("code",[a._v("@TableField")]),a._v(" 注解指定数据库字段名")])]),a._v(" "),t("h3",{attrs:{id:"cacheenabled🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cacheenabled🔥"}},[a._v("#")]),a._v(" cacheEnabled🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("true")])])]),a._v(" "),t("p",[a._v("是否开启二级缓存，Mybatis 和 MP 默认都为 true")]),a._v(" "),t("h3",{attrs:{id:"defaultenumtypehandler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#defaultenumtypehandler"}},[a._v("#")]),a._v(" defaultEnumTypeHandler")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Class")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("org.apache.ibatis.type.EnumTypeHandler")])])]),a._v(" "),t("p",[a._v("默认枚举处理类,如果配置了该属性,枚举将统一使用指定处理器进行处理")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("org.apache.ibatis.type.EnumTypeHandler : 存储枚举的名称")]),a._v(" "),t("li",[a._v("org.apache.ibatis.type.EnumOrdinalTypeHandler : 存储枚举的索引")]),a._v(" "),t("li",[a._v("com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler : 枚举类需要实现IEnum接口或字段标记@EnumValue注解.(3.1.2以下版本为EnumTypeHandler)")]),a._v(" "),t("li",[a._v("com.baomidou.mybatisplus.extension.handlers.EnumAnnotationTypeHandler: 枚举类字段需要标记@EnumValue注解")])])]),a._v(" "),t("h3",{attrs:{id:"aggressivelazyloading"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aggressivelazyloading"}},[a._v("#")]),a._v(" aggressiveLazyLoading")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("true")])])]),a._v(" "),t("p",[a._v("当设置为 true 的时候，懒加载的对象可能被任何懒属性全部加载，否则，每个属性都按需加载。需要和 "),t("a",{attrs:{href:"https://mybatis.plus/config/",target:"_blank",rel:"noopener noreferrer"}},[a._v("lazyLoadingEnabled"),t("OutboundLink")],1),a._v(" 一起使用。")]),a._v(" "),t("h3",{attrs:{id:"automappingbehavior✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#automappingbehavior✨"}},[a._v("#")]),a._v(" autoMappingBehavior✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("AutoMappingBehavior")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("partial")])])]),a._v(" "),t("p",[a._v("MyBatis 自动映射策略，通过该配置可指定 MyBatis 是否并且如何来自动映射数据表字段与对象的属性，总共有 3 种可选值：")]),a._v(" "),t("ul",[t("li",[a._v("AutoMappingBehavior.NONE：不启用自动映射")]),a._v(" "),t("li",[a._v("AutoMappingBehavior.PARTIAL：只对非嵌套的 resultMap 进行自动映射")]),a._v(" "),t("li",[a._v("AutoMappingBehavior.FULL：对所有的 resultMap 都进行自动映射")])]),a._v(" "),t("h3",{attrs:{id:"automappingunknowncolumnbehavior"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#automappingunknowncolumnbehavior"}},[a._v("#")]),a._v(" autoMappingUnknownColumnBehavior")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("AutoMappingUnknownColumnBehavior")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("NONE")])])]),a._v(" "),t("p",[a._v("MyBatis 自动映射时未知列或未知属性处理策略，通过该配置可指定 MyBatis 在自动映射过程中遇到未知列或者未知属性时如何处理，总共有 3 种可选值：")]),a._v(" "),t("ul",[t("li",[a._v("AutoMappingUnknownColumnBehavior.NONE：不做任何处理 (默认值)")]),a._v(" "),t("li",[a._v("AutoMappingUnknownColumnBehavior.WARNING：以日志的形式打印相关警告信息")]),a._v(" "),t("li",[a._v("AutoMappingUnknownColumnBehavior.FAILING：当作映射失败处理，并抛出异常和详细信息")])]),a._v(" "),t("h3",{attrs:{id:"callsettersonnulls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#callsettersonnulls"}},[a._v("#")]),a._v(" callSettersOnNulls")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("false")])])]),a._v(" "),t("p",[a._v("指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法，通常运用于有 Map.keySet() 依赖或 null 值初始化的情况。")]),a._v(" "),t("p",[a._v("通俗的讲，即 MyBatis 在使用 resultMap 来映射查询结果中的列，如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段，这就导致在调用到该字段的时候由于没有映射，取不到而报空指针异常。")]),a._v(" "),t("p",[a._v("当您遇到类似的情况，请针对该属性进行相关配置以解决以上问题。")]),a._v(" "),t("blockquote",[t("p",[a._v("基本类型（int、boolean 等）是不能设置成 null 的。")])]),a._v(" "),t("h3",{attrs:{id:"configurationfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configurationfactory"}},[a._v("#")]),a._v(" configurationFactory")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Class")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("指定一个提供 Configuration 实例的工厂类。该工厂生产的实例将用来加载已经被反序列化对象的懒加载属性值，其必须包含一个签名方法"),t("code",[a._v("static Configuration getConfiguration()")]),a._v("。（从 3.2.3 版本开始）")]),a._v(" "),t("h2",{attrs:{id:"globalconfig✨mp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#globalconfig✨mp"}},[a._v("#")]),a._v(" globalConfig✨MP")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("GlobalConfig")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("MyBatis-Plus 全局策略配置。")]),a._v(" "),t("h3",{attrs:{id:"banner✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#banner✨"}},[a._v("#")]),a._v(" banner✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("true")])])]),a._v(" "),t("p",[a._v("是否控制台 print mybatis-plus 的 LOGO")]),a._v(" "),t("h3",{attrs:{id:"sqlparsercache-☠️3-1-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sqlparsercache-☠️3-1-1"}},[a._v("#")]),a._v(" sqlParserCache(☠️3.1.1)")]),a._v(" "),t("p",[a._v("Deprecated 3.1.1,直接开启缓存")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("false")])])]),a._v(" "),t("p",[a._v("是否缓存 Sql 解析，默认不缓存")]),a._v(" "),t("h3",{attrs:{id:"workerid✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#workerid✨"}},[a._v("#")]),a._v(" workerId✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Long")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("机器 ID 部分(影响雪花ID)")]),a._v(" "),t("h3",{attrs:{id:"datacenterid✨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#datacenterid✨"}},[a._v("#")]),a._v(" datacenterId✨")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Long")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("数据标识 ID 部分(影响雪花ID)(workerId 和 datacenterId 一起配置才能重新初始化 Sequence)")]),a._v(" "),t("h3",{attrs:{id:"enablesqlrunner"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enablesqlrunner"}},[a._v("#")]),a._v(" enableSqlRunner")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("false")])])]),a._v(" "),t("p",[a._v("是否初始化 SqlRunner(com.baomidou.mybatisplus.extension.toolkit.SqlRunner)")]),a._v(" "),t("h3",{attrs:{id:"sqlinjector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sqlinjector"}},[a._v("#")]),a._v(" sqlInjector")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.core.injector.ISqlInjector")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("com.baomidou.mybatisplus.core.injector.DefaultSqlInjector")])])]),a._v(" "),t("p",[a._v("SQL注入器(starter 下支持"),t("code",[a._v("@bean")]),a._v("注入)")]),a._v(" "),t("h3",{attrs:{id:"supermapperclass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#supermapperclass"}},[a._v("#")]),a._v(" superMapperClass")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("Class")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("com.baomidou.mybatisplus.core.mapper.Mapper.class")])])]),a._v(" "),t("p",[a._v("通用Mapper父类(影响sqlInjector,只有这个的子类的 mapper 才会注入 sqlInjector 内的 method)")]),a._v(" "),t("h3",{attrs:{id:"metaobjecthandler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#metaobjecthandler"}},[a._v("#")]),a._v(" metaObjectHandler")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.core.handlers.MetaObjectHandler")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("元对象字段填充控制器(starter 下支持"),t("code",[a._v("@bean")]),a._v("注入)")]),a._v(" "),t("h3",{attrs:{id:"idgenerator✨-since-3-2-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idgenerator✨-since-3-2-1"}},[a._v("#")]),a._v(" idGenerator✨(since 3.2.1)")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.core.incrementer.IdGenerator")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("Id生成器(starter 下支持"),t("code",[a._v("@bean")]),a._v("注入)")]),a._v(" "),t("h3",{attrs:{id:"dbconfig"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbconfig"}},[a._v("#")]),a._v(" dbConfig")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.annotation.DbConfig")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("MyBatis-Plus 全局策略中的 DB 策略配置，见"),t("a",{attrs:{href:"#dbconfig"}},[a._v("dbConfig")])]),a._v(" "),t("h2",{attrs:{id:"dbconfig🔥mp-db"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbconfig🔥mp-db"}},[a._v("#")]),a._v(" - dbConfig🔥MP-DB")]),a._v(" "),t("h3",{attrs:{id:"idtype🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idtype🔥"}},[a._v("#")]),a._v(" idType🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.annotation.IdType")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("ID_WORKER")])])]),a._v(" "),t("p",[t("strong",[a._v("全局默认主键类型")]),a._v("，不用在每个属性上添加注解")]),a._v(" "),t("h3",{attrs:{id:"tableprefix🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tableprefix🔥"}},[a._v("#")]),a._v(" tablePrefix🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[t("strong",[a._v("表名前缀")]),a._v("，省区每个实体类中添加注解，如"),t("code",[a._v("User")]),a._v("->"),t("code",[a._v("tb_user")])]),a._v(" "),t("h3",{attrs:{id:"schema🔥-since-3-1-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#schema🔥-since-3-1-1"}},[a._v("#")]),a._v(" schema🔥(since 3.1.1)")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("schema")]),a._v(" "),t("h3",{attrs:{id:"columnformat🔥-since-3-1-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#columnformat🔥-since-3-1-1"}},[a._v("#")]),a._v(" columnFormat🔥(since 3.1.1)")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("字段 format(since 3.1.1),例: "),t("code",[a._v("%s")]),a._v(",(对主键无效)")]),a._v(" "),t("h3",{attrs:{id:"tableunderline🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tableunderline🔥"}},[a._v("#")]),a._v(" tableUnderline🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("true")])])]),a._v(" "),t("p",[a._v("表名、是否使用下划线命名，默认数据库表使用下划线命名")]),a._v(" "),t("h3",{attrs:{id:"capitalmode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#capitalmode"}},[a._v("#")]),a._v(" capitalMode")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("boolean")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("false")])])]),a._v(" "),t("p",[a._v("是否开启大写命名，默认不开启")]),a._v(" "),t("h3",{attrs:{id:"keygenerator🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keygenerator🔥"}},[a._v("#")]),a._v(" keyGenerator🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.core.incrementer.IKeyGenerator")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("null")])])]),a._v(" "),t("p",[a._v("表主键生成器(starter 下支持"),t("code",[a._v("@bean")]),a._v("注入)")]),a._v(" "),t("h3",{attrs:{id:"logicdeletevalue🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logicdeletevalue🔥"}},[a._v("#")]),a._v(" logicDeleteValue🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("1")])])]),a._v(" "),t("p",[a._v("逻辑已删除值,("),t("a",{attrs:{href:"https://mybatis.plus/guide/logic-delete.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("逻辑删除"),t("OutboundLink")],1),a._v("下有效)")]),a._v(" "),t("h3",{attrs:{id:"logicnotdeletevalue🔥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logicnotdeletevalue🔥"}},[a._v("#")]),a._v(" logicNotDeleteValue🔥")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("String")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("0")])])]),a._v(" "),t("p",[a._v("逻辑未删除值,("),t("a",{attrs:{href:"https://mybatis.plus/guide/logic-delete.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("逻辑删除"),t("OutboundLink")],1),a._v("下有效)")]),a._v(" "),t("h3",{attrs:{id:"insertstrategy🔥-since-3-1-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insertstrategy🔥-since-3-1-2"}},[a._v("#")]),a._v(" insertStrategy🔥(since 3.1.2)")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.annotation.FieldStrategy")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("NOT_NULL")])])]),a._v(" "),t("p",[a._v("字段验证策略之 insert")]),a._v(" "),t("blockquote",[t("p",[a._v("说明:")]),a._v(" "),t("p",[a._v("在 insert 的时候的字段验证策略 目前没有默认值,等 {@link #fieldStrategy} 完全去除掉,会给个默认值 NOT_NULL 没配则按 {@link #fieldStrategy} 为准")])]),a._v(" "),t("h3",{attrs:{id:"updatestrategy🔥-since-3-1-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updatestrategy🔥-since-3-1-2"}},[a._v("#")]),a._v(" updateStrategy🔥(since 3.1.2)")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.annotation.FieldStrategy")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("NOT_NULL")])])]),a._v(" "),t("p",[a._v("字段验证策略之 update")]),a._v(" "),t("blockquote",[t("p",[a._v("说明:")]),a._v(" "),t("p",[a._v("在 update 的时候的字段验证策略 目前没有默认值,等 {@link #fieldStrategy} 完全去除掉,会给个默认值 NOT_NULL 没配则按 {@link #fieldStrategy} 为准")])]),a._v(" "),t("h3",{attrs:{id:"selectstrategy🔥-since-3-1-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selectstrategy🔥-since-3-1-2"}},[a._v("#")]),a._v(" selectStrategy🔥(since 3.1.2)")]),a._v(" "),t("ul",[t("li",[a._v("类型："),t("code",[a._v("com.baomidou.mybatisplus.annotation.FieldStrategy")])]),a._v(" "),t("li",[a._v("默认值："),t("code",[a._v("NOT_NULL")])])]),a._v(" "),t("p",[a._v("字段验证策略之 select")]),a._v(" "),t("blockquote",[t("p",[a._v("说明:")]),a._v(" "),t("p",[a._v("在 select 的时候的字段验证策略: wrapper 根据内部 entity 生成的 where 条件 目前没有默认值,等 {@link #fieldStrategy} 完全去除掉,会给个默认值 NOT_NULL 没配则按 {@link #fieldStrategy} 为准")])])])}),[],!1,null,null,null);e.default=_.exports}}]);