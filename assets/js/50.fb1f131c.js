(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{227:function(t,s,a){t.exports=a.p+"assets/img/3eb420c96b75b44.b125e607.png"},430:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" Docker Compose")]),t._v(" "),n("h2",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),n("p",[t._v("Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速"),n("strong",[t._v("编排")]),t._v("（常用于开发测试环境，生产环境使用 K8S）。从功能上看，跟 OpenStack 中的 Heat 十分类似。其代码目前在 "),n("a",{attrs:{href:"http://www.qfdmy.com/wp-content/themes/quanbaike/go.php?url=aHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci9jb21wb3Nl",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/docker/compose"),n("OutboundLink")],1),t._v(" 上开源。Compose 定位是 「定义和运行多个 Docker 容器的应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。")]),t._v(" "),n("p",[t._v("我们知道使用一个 Dockerfile 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。Compose 恰好满足了这样的需求。它允许用户通过一个单独的 "),n("strong",[t._v("docker-compose.yml")]),t._v(" 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（Project）。Compose 中有两个重要的概念：")]),t._v(" "),n("ul",[n("li",[t._v("服务 ("),n("strong",[t._v("Service")]),t._v(")：一个应用的"),n("strong",[t._v("容器")]),t._v("，实际上可以包括若干运行相同镜像的容器实例。")]),t._v(" "),n("li",[t._v("项目 ("),n("strong",[t._v("Project")]),t._v(")：由"),n("strong",[t._v("一组关联的应用容器")]),t._v("组成的一个完整业务单元，在 docker-compose.yml 文件中定义。")])]),t._v(" "),n("p",[t._v("Compose 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。Compose 项目由 Python 编写，实现上调用了 Docker 服务提供的 API 来对容器进行管理。因此，只要所操作的平台支持 Docker API，就可以在其上利用 Compose 来进行编排管理。")]),t._v(" "),n("h2",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),n("p",[t._v("Compose 支持 Linux、macOS、Windows 10 三大平台。详细查看官方文档https://docs.docker.com/compose/install/，Github 上也有https://github.com/docker/compose/releases。")]),t._v(" "),n("h2",{attrs:{id:"命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),n("p",[t._v("执行 Compose 命令，会自动下载镜像，运行容器。命令必须在 "),n("code",[t._v("docker-compose.yaml")]),t._v(" 文件所在路径下执行。")]),t._v(" "),n("p",[t._v("启动")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker-compose up -d\n")])])]),n("p",[t._v("停止")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker-compose down\n")])])]),n("h2",{attrs:{id:"tomcat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tomcat"}},[t._v("#")]),t._v(" Tomcat")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("/usr/local/docker/tomcat")]),t._v("下编写 "),n("code",[t._v("docker-compose.yaml")]),t._v(" 文件，如下面的 tomcat 配置文件")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数据卷")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./webapps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 宿主机:容器")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Asia/Shanghai "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 时区，Linux 中没有北京时间，只有上海和重庆")]),t._v("\n")])])]),n("p",[t._v("该目录中执行如下命令即可以守护进程运行 Tomcat。命令上")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("数据卷volumes")]),t._v("由来：由于容器的 IO 操作会给磁盘读写数据，但是都是"),n("strong",[t._v("临时")]),t._v("的，容器删除后就没有了（举例类与对象）。所以 Docker 提供了“数据卷volumes”，容器的 IO 操作会写入数据卷 volumes 中，volumes 和磁盘有关连（如配置中的映射），共享数据（有则都有）。可以直接给宿主机的该目录添加东西，自动映射到容器的目录中。运行上述 Tomcat容器后会发现配置的当前目录下多了一个 webapps 目录。")])]),t._v(" "),n("h2",{attrs:{id:"mysql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" MySQL")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目前 latest 版本为 MySQL8.x")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MYSQL_ROOT_PASSWORD")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("default"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("authentication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("plugin=mysql_native_password\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8mb4\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("collation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8mb4_general_ci\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("explicit_defaults_for_timestamp=true\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lower_case_table_names=1\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 3306"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MySQL 的 Web 客户端。此处只是说明下一个 Compose Project 中可以写多个 Service")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("adminer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" adminer\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080 ")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 宿主机的8080端口可能被占用，需要修改")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("adminer这个 web 站点有个“变量”，可以查看“command”的配置，还能跳转到官网详细介绍页面")])]),t._v(" "),n("h2",{attrs:{id:"redis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 6379"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n")])])]),n("h2",{attrs:{id:"gitlab"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab"}},[t._v("#")]),t._v(" GitLab")]),t._v(" "),n("h3",{attrs:{id:"部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),n("p",[t._v("GitLab 是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的 Git 项目仓库，可通过 Web 界面进行访问公开的或者私人项目。它拥有与 Github 类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序 (Wall) 进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。")]),t._v(" "),n("p",[t._v("GitLab的安装需要很多步骤，可以通过手动安装，手动制作 Dockerfile，制作 Compose 来练习。")]),t._v(" "),n("p",[t._v("我们使用 Docker 来安装和运行 GitLab 中文版，"),n("code",[t._v("docker-compose.yml")]),t._v(" 配置如下（可以在 Hub 中查找该 "),n("a",{attrs:{href:"https://hub.docker.com/r/twang2218/gitlab-ce-zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("compose"),n("OutboundLink")],1),t._v("，注意修改自己主机的 IP 或域名）：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'twang2218/gitlab-ce-zh'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'172.16.154.12'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Asia/Shanghai'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITLAB_OMNIBUS_CONFIG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          external_url 'http://172.16.154.12'\n          gitlab_rails['gitlab_shell_ssh_port'] = 2222\n          unicorn['port'] = 8888\n          nginx['listen_port'] = 80")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'80:80'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'443:443'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2222:22'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/gitlab\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/opt/gitlab\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/log/gitlab\n")])])]),n("blockquote",[n("p",[t._v("该项目文档中提供有"),n("code",[t._v("run")]),t._v("命令")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker run -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --hostname gitlab.example.com "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(":443 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":22 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --name gitlab "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --restart unless-stopped "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v gitlab-config:/etc/gitlab "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v gitlab-logs:/var/log/gitlab "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -v gitlab-data:/var/opt/gitlab "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --network gitlab-net "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    twang2218/gitlab-ce-zh:11.1.4\n")])])]),n("p",[t._v("虽然文档中也提供了 Compose，但是我们需要学会如何将它转换为 Compose 文件")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'twang2218/gitlab-ce-zh:11.1.4'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" unless"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("stopped\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gitlab.example.com'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TZ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Asia/Shanghai'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITLAB_OMNIBUS_CONFIG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          external_url 'http://gitlab.example.com'\n          gitlab_rails['time_zone'] = 'Asia/Shanghai'\n          # 需要配置到 gitlab.rb 中的配置可以在这里配置，每个配置一行，注意缩进。\n          # 比如下面的电子邮件的配置：\n          # gitlab_rails['smtp_enable'] = true\n          # gitlab_rails['smtp_address'] = \"smtp.exmail.qq.com\"\n          # gitlab_rails['smtp_port'] = 465\n          # gitlab_rails['smtp_user_name'] = \"xxxx@xx.com\"\n          # gitlab_rails['smtp_password'] = \"password\"\n          # gitlab_rails['smtp_authentication'] = \"login\"\n          # gitlab_rails['smtp_enable_starttls_auto'] = true\n          # gitlab_rails['smtp_tls'] = true\n          # gitlab_rails['gitlab_email_from'] = 'xxxx@xx.com'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'80:80'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'443:443'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'22:22'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/gitlab\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/opt/gitlab\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/log/gitlab\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的数据卷，由于上面的数据卷配置后没有访问权限，所以这里配置，其目录会在/var/lib/docker/volumes下")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])])]),t._v(" "),n("ul",[n("li",[t._v("登录80端口，设置管理员初始密码，这里的密码最好是 "),n("strong",[t._v("字母 + 数字组合，并且大于等于 8 位")])]),t._v(" "),n("li",[t._v("配置完成后登录，管理员账号是 "),n("strong",[t._v("root")])]),t._v(" "),n("li",[t._v("第一次使用时可以做一些初始化设置，点击 "),n("strong",[t._v("管理区域")]),t._v(" -> "),n("strong",[t._v("设置")])]),t._v(" "),n("li",[t._v("可以关闭Gravatar头像。由于 Gravatar 头像为网络头像，在网络情况不理想时可能导致访问时卡顿")]),t._v(" "),n("li",[t._v("注册限制：由于是内部代码托管服务器，可以直接关闭注册功能，由管理员统一创建用户即可")]),t._v(" "),n("li",[t._v("创建账户，点击 "),n("strong",[t._v("管理区域")]),t._v(" -> "),n("strong",[t._v("新建用户")]),t._v("，设置自己为管理员，不应该使用 root 账户来登录操作")]),t._v(" "),n("li",[t._v("修改用户密码，由于我们创建时并没有配置邮箱，所以还需要重新编辑用户信息并手动设置密码。第一次登录还是会提示修改密码，直接用原密码修改即可")]),t._v(" "),n("li",[n("strong",[t._v("新建项目")])])]),t._v(" "),n("h3",{attrs:{id:"ssh-方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ssh-方式"}},[t._v("#")]),t._v(" SSH 方式")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("目的：")]),t._v(" "),n("ul",[n("li",[t._v("安全：无密码")]),t._v(" "),n("li",[t._v("方便")]),t._v(" "),n("li",[t._v("CI/CD 做准备")])])]),t._v(" "),n("li",[n("p",[t._v("生成 SSH KEY")]),t._v(" "),n("p",[t._v("使用 ssh-keygen 工具生成，若本机有则没必要生成")]),t._v(" "),n("p",[t._v("Windows 中该工具位置在 Git 安装目录下（Win10好像自带有）macOS 自带，输入命令：")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("ssh-keygen -t rsa -C "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your_email@example.com"')]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("生成的密钥的公钥位置在")]),t._v(" "),n("ul",[n("li",[t._v("Win10："),n("code",[t._v("C:\\Users\\你的用户名\\.ssh")]),t._v(" 目录下的 "),n("code",[t._v("id_rsa.pub")])]),t._v(" "),n("li",[t._v("macOS："),n("code",[t._v("/Users/conanan/.ssh")]),t._v("目录下的 "),n("code",[t._v("id_rsa.pub")])])]),t._v(" "),n("p",[t._v("将其内容复制到 GitLab 的 SSH 中，之后就可以免密 pull、push 等操作了。此时该仓库自动改为 SSH 链接的 URL 了，并且SSH 端口变为2222，这是由于上面的 compose 配置为此。也可以将宿主机 SSH 端口改为其他的，详细看该 compose 文档。")])])]),t._v(" "),n("h3",{attrs:{id:"小-case"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小-case"}},[t._v("#")]),t._v(" 小 Case")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Gravatar")]),t._v(" "),n("p",[t._v("全球公认头像，可以输入邮箱后自动查找")])])]),t._v(" "),n("h2",{attrs:{id:"nexus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nexus"}},[t._v("#")]),t._v(" Nexus")]),t._v(" "),n("p",[t._v("Nexus 是一个强大的 Maven 仓库管理器，极大地简化了内部仓库的维护和外部仓库的访问。2016 年 4 月 6 日 Nexus 3.0 版本发布，相较 2.x 版本有了很大的改变")]),t._v(" "),n("ul",[n("li",[t._v("对低层代码进行了大规模重构，提升性能，增加可扩展性以及改善用户体验。")]),t._v(" "),n("li",[t._v("升级界面，极大的简化了用户界面的操作和管理。")]),t._v(" "),n("li",[t._v("提供新的安装包，让部署更加简单。")]),t._v(" "),n("li",[t._v("增加对 Docker, NeGet, npm, Bower 的支持。")]),t._v(" "),n("li",[t._v("提供新的管理接口，以及增强对自动任务的管理。")])]),t._v(" "),n("h3",{attrs:{id:"部署-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署-2"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),n("p",[t._v("我们使用 Docker 来安装和运行 Nexus，"),n("code",[t._v("docker-compose.yml")]),t._v(" 配置如下：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nexus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sonatype/nexus3\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nexus\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/nexus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("data\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其文件会在/var/lib/docker/volumes/nexus_data/下，前缀 nexus 是由于配置文件所在目录名")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),n("h3",{attrs:{id:"验证安装是否成功"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证安装是否成功"}},[t._v("#")]),t._v(" 验证安装是否成功")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("地址：")]),t._v(" "),n("a",{attrs:{href:"http://www.qfdmy.com/wp-content/themes/quanbaike/go.php?url=aHR0cDovL2lwOnBvcnQv",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://ip:port/"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("strong",[t._v("用户名：")]),t._v(" admin")]),t._v(" "),n("li",[n("strong",[t._v("密码：")]),t._v(" 在 "),n("code",[t._v("cat /var/lib/docker/volumes/nexus_data/_data/admin.password")]),t._v("中，第一次进入后提示可修改，可改为 admin123456")])]),t._v(" "),n("h3",{attrs:{id:"maven-仓库介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven-仓库介绍"}},[t._v("#")]),t._v(" Maven 仓库介绍")]),t._v(" "),n("ul",[n("li",[t._v("代理仓库(Proxy Repository)\n"),n("ul",[n("li",[t._v("第三方仓库\n"),n("ul",[n("li",[n("strong",[t._v("maven-central")])]),t._v(" "),n("li",[n("strong",[t._v("nuget.org-proxy")])])])]),t._v(" "),n("li",[t._v("版本策略(Version Policy)\n"),n("ul",[n("li",[n("strong",[t._v("Release：")]),t._v(" 正式版本")]),t._v(" "),n("li",[n("strong",[t._v("Snapshot：")]),t._v(" 快照版本")]),t._v(" "),n("li",[n("strong",[t._v("Mixed：")]),t._v(" 混合模式")])])]),t._v(" "),n("li",[t._v("布局策略(Layout Policy)\n"),n("ul",[n("li",[n("strong",[t._v("Strict：")]),t._v(" 严格")]),t._v(" "),n("li",[n("strong",[t._v("Permissive：")]),t._v(" 宽松")])])])])]),t._v(" "),n("li",[t._v("宿主仓库(Hosted Repository)\n"),n("ul",[n("li",[t._v("存储本地上传的组件和资源的\n"),n("ul",[n("li",[n("strong",[t._v("maven-releases")])]),t._v(" "),n("li",[n("strong",[t._v("maven-snapshots")])]),t._v(" "),n("li",[n("strong",[t._v("nuget-hosted")])])])]),t._v(" "),n("li",[t._v("部署策略(Deployment Policy)\n"),n("ul",[n("li",[n("strong",[t._v("Allow Redeploy：")]),t._v(" 允许重新部署")]),t._v(" "),n("li",[n("strong",[t._v("Disable Redeploy：")]),t._v(" 禁止重新部署")]),t._v(" "),n("li",[n("strong",[t._v("Read-Only：")]),t._v(" 只读")])])])])]),t._v(" "),n("li",[t._v("仓库组(Repository Group)：通常包含了多个代理仓库和宿主仓库，在项目中只要引入仓库组就可以下载到代理仓库和宿主仓库中的包\n"),n("ul",[n("li",[n("strong",[t._v("maven-public")])]),t._v(" "),n("li",[n("strong",[t._v("nuget-group")])])])])]),t._v(" "),n("h3",{attrs:{id:"在项目中使用-nexus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在项目中使用-nexus"}},[t._v("#")]),t._v(" 在项目中使用 Nexus")]),t._v(" "),n("h4",{attrs:{id:"从私服下载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从私服下载"}},[t._v("#")]),t._v(" 从私服下载")]),t._v(" "),n("p",[n("strong",[t._v("配置代理仓库")]),t._v("（不过需要注释掉之前的 mirror 镜像，否则不起作用）")]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("repositories")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("repository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nexus"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Nexus Repository"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("http://172.16.154.12:8081/repository/maven-public/"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("snapshots")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("snapshots")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("releases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("releases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("repository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("repositories")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("pluginRepositories")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("pluginRepository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nexus"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Nexus Plugin Repository"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("http://172.16.154.12:8081/repository/maven-public/"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("snapshots")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("snapshots")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("releases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("enabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("releases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("pluginRepository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("pluginRepositories")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h4",{attrs:{id:"部署到私服"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署到私服"}},[t._v("#")]),t._v(" 部署到私服")]),t._v(" "),n("p",[n("strong",[t._v("配置自动化部署到私服")])]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("配置认证信息")]),t._v("，在 Maven "),n("code",[t._v("settings.xml")]),t._v(" 中添加 Nexus 认证信息 ("),n("strong",[t._v("servers")]),t._v(" 节点下)")]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nexus-releases"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("username")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("admin"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("username")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("admin123456"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nexus-snapshots"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("username")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("admin"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("username")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("admin123456"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("server")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("Release 版本与 Snapshot 定义")]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[t._v("Release: 1.0.0/1.0.0-RELEASE\nSnapshot: 1.0.0-SNAPSHOT\n")])])]),n("ul",[n("li",[t._v("在项目 "),n("code",[t._v("pom.xml")]),t._v(" 中设置的版本号添加 "),n("code",[t._v("SNAPSHOT")]),t._v(" 标识的都会发布为 "),n("code",[t._v("SNAPSHOT")]),t._v(" 版本，没有 "),n("code",[t._v("SNAPSHOT")]),t._v(" 标识的都会发布为 "),n("code",[t._v("RELEASE")]),t._v(" 版本。")]),t._v(" "),n("li",[n("code",[t._v("SNAPSHOT")]),t._v(" 版本会自动加一个时间作为标识，如："),n("code",[t._v("1.0.0-SNAPSHOT")]),t._v(" 发布后为变成 "),n("code",[t._v("1.0.0-SNAPSHOT-20180522.123456-1.jar")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("配置发布管理")]),t._v("，在 "),n("code",[t._v("pom.xml")]),t._v(" 中添加如下代码")]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("distributionManagement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("repository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nexus-releases"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Nexus Release Repository"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("http://172.16.154.12:8081/repository/maven-releases/"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("repository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("snapshotRepository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nexus-snapshots"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Nexus Snapshot Repository"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("http://172.16.154.12:8081/repository/maven-snapshots/"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("snapshotRepository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("distributionManagement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n")])])]),n("p",[n("strong",[t._v("注意事项")])]),t._v(" "),n("ul",[n("li",[t._v("ID 名称必须要与 "),n("code",[t._v("settings.xml")]),t._v(" 中 Servers 配置的 ID 名称保持一致")]),t._v(" "),n("li",[t._v("项目版本号中有 "),n("code",[t._v("SNAPSHOT")]),t._v(" 标识的，会发布到 Nexus Snapshots Repository， 否则发布到 Nexus Release Repository，并根据 ID 去匹配授权账号")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("部署到仓库")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("mvn deploy\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"扩展阅读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[t._v("#")]),t._v(" 扩展阅读")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("手动上传第三方依赖（解决通过 POM 下载不下来的依赖）")]),t._v(" "),n("p",[t._v("Nexus 3.1.x 开始支持页面上传第三方依赖功能（左侧菜单有 Upload），以下为手动上传命令")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如第三方JAR包：aliyun-sdk-oss-2.2.3.jar")]),t._v("\nmvn deploy:deploy-file \n  -DgroupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("com.aliyun.oss \n  -DartifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("aliyun-sdk-oss \n  -Dversion"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v(".3 \n  -Dpackaging"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("jar \n  -Dfile"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("D:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("aliyun-sdk-oss-2.2.3.jar \n  -Durl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://127.0.0.1:8081/repository/maven-3rd/ \n  -DrepositoryId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nexus-releases\n")])])]),n("p",[n("strong",[t._v("注意事项")])]),t._v(" "),n("ul",[n("li",[t._v("建议在上传第三方 JAR 包时，创建单独的第三方 JAR 包管理仓库，便于管理有维护。（maven-3rd）")]),t._v(" "),n("li",[n("code",[t._v("-DrepositoryId=nexus-releases")]),t._v(" 对应的是 "),n("code",[t._v("settings.xml")]),t._v(" 中 "),n("strong",[t._v("Servers")]),t._v(" 配置的 ID 名称。（授权）")])])])]),t._v(" "),n("h2",{attrs:{id:"harbor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor"}},[t._v("#")]),t._v(" Harbor")]),t._v(" "),n("h3",{attrs:{id:"简介-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),n("p",[t._v("Harbor 是一个用于存储和分发 Docker 镜像的企业级 Registry 服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源 Docker Distribution。作为一个企业级私有 Registry 服务器，Harbor 提供了更好的性能和安全。提升用户使用 Registry 构建和运行环境传输镜像的效率。Harbor 支持安装在多个 Registry 节点的镜像资源复制，镜像全部保存在私有 Registry 中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor 也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。")]),t._v(" "),n("h3",{attrs:{id:"harbor-特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-特性"}},[t._v("#")]),t._v(" Harbor 特性")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("基于角色的访问控制 ：")]),t._v(" 用户与 Docker 镜像仓库通过 “项目” 进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。")]),t._v(" "),n("li",[n("strong",[t._v("镜像复制 ：")]),t._v(" 镜像可以在多个 Registry 实例中复制（同步）。尤其适合于负载均衡，高可用，混合云和多云的场景。")]),t._v(" "),n("li",[n("strong",[t._v("图形化用户界面 ：")]),t._v(" 用户可以通过浏览器来浏览，检索当前 Docker 镜像仓库，管理项目和命名空间。")]),t._v(" "),n("li",[n("strong",[t._v("AD/LDAP 支持 ：")]),t._v(" Harbor 可以集成企业内部已有的 AD/LDAP，用于鉴权认证管理。")]),t._v(" "),n("li",[n("strong",[t._v("审计管理 ：")]),t._v(" 所有针对镜像仓库的操作都可以被记录追溯，用于审计管理。")]),t._v(" "),n("li",[n("strong",[t._v("国际化 ：")]),t._v(" 已拥有英文、中文、德文、日文和俄文的本地化版本。更多的语言将会添加进来。")]),t._v(" "),n("li",[n("strong",[t._v("RESTful API ：")]),t._v(" RESTful API 提供给管理员对于 Harbor 更多的操控，使得与其它管理软件集成变得更容易。")]),t._v(" "),n("li",[n("strong",[t._v("部署简单 ：")]),t._v(" 提供在线和离线两种安装工具， 也可以安装到 vSphere 平台 (OVA 方式) 虚拟设备。")])]),t._v(" "),n("h3",{attrs:{id:"harbor-组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-组件"}},[t._v("#")]),t._v(" Harbor 组件")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("Proxy：")]),t._v(" Harbor 的 registry, UI, token 等服务，通过一个前置的反向代理统一接收浏览器、Docker 客户端的请求，并将请求转发给后端不同的服务。")]),t._v(" "),n("li",[n("strong",[t._v("Registry：")]),t._v(" 负责储存 Docker 镜像，并处理 docker push/pull 命令。由于我们要对用户进行访问控制，即不同用户对 Docker image 有不同的读写权限，Registry 会指向一个 token 服务，强制用户的每次 docker pull/push 请求都要携带一个合法的 token, Registry 会通过公钥对 token 进行解密验证。")]),t._v(" "),n("li",[n("strong",[t._v("Core services")]),t._v("：这是 Harbor 的核心功能，主要提供以下服务：\n"),n("ul",[n("li",[n("strong",[t._v("UI：")]),t._v(" 提供图形化界面，帮助用户管理 registry 上的镜像（image）, 并对用户进行授权。")]),t._v(" "),n("li",[n("strong",[t._v("WebHook：")]),t._v(" 为了及时获取 registry 上 image 状态变化的情况， 在 Registry 上配置 webhook，把状态变化传递给 UI 模块。")]),t._v(" "),n("li",[n("strong",[t._v("Token：")]),t._v(" 负责根据用户权限给每个 docker push/pull 命令签发 token. Docker 客户端向 - Registry 服务发起的请求，如果不包含 token，会被重定向到这里，获得 token 后再重新向 Registry 进行请求。")])])]),t._v(" "),n("li",[n("strong",[t._v("Database：")]),t._v(" 为 core services 提供数据库服务，负责储存用户权限、审计日志、Docker image 分组信息等数据。")]),t._v(" "),n("li",[n("strong",[t._v("Job Services：")]),t._v(" 提供镜像远程复制功能，可以把本地镜像同步到其他 Harbor 实例中。")]),t._v(" "),n("li",[n("strong",[t._v("Log Collector：")]),t._v(" 为了帮助监控 Harbor 运行，负责收集其他组件的 log，供日后进行分析。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(227),alt:"img"}})]),t._v(" "),n("h3",{attrs:{id:"harbor-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-安装"}},[t._v("#")]),t._v(" Harbor 安装")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/goharbor/harbor",target:"_blank",rel:"noopener noreferrer"}},[t._v("Harbor GitHub"),n("OutboundLink")],1),t._v(" 有详细介绍")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("解压")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xvf harbor-offline-installer-v1.10.0-\n")])])])]),t._v(" "),n("li",[n("p",[t._v("修改配置文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" harbor/\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" harbor.yml\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改为域名或你服务器 IP")]),t._v("\nhostname: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12\n\nhttp: \n\tport: "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8082")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口根据需要修改")]),t._v("\nhttps: "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不需要 https 则先注释掉 https 的 attribute")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# port: 443")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\nharbor_admin_password: Harbor12345 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 密码也可以修改")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("执行安装脚本")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("./install.sh\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会执行5步")]),t._v("\n✔ ----Harbor has been installed and started successfully.----\n")])])]),n("p",[t._v("通过浏览器访问 http://172.16.154.12:8082/，即可看到登录页面。输入账号 "),n("code",[t._v("admin")]),t._v("，密码 "),n("code",[t._v("Harbor12345")])])])]),t._v(" "),n("h3",{attrs:{id:"harbor-启动和停止"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-启动和停止"}},[t._v("#")]),t._v(" Harbor 启动和停止")]),t._v(" "),n("p",[t._v("Harbor 的日常运维管理是通过 docker-compose 来完成的，Harbor 本身有多个服务进程，都放在 docker 容器之中运行，我们可以通过 "),n("code",[t._v("docker ps")]),t._v(" 命令查看。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" goharbor\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动")]),t._v("\ndocker-compose start "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以 up")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止")]),t._v("\ndocker-compose stop "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以 down")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启")]),t._v("\ndocker-compose restart\n")])])]),n("p",[n("strong",[t._v("说明：")])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("nginx：")]),t._v(" nginx 负责流量转发和安全验证，对外提供的流量都是从 nginx 中转，所以开放 https 的 443 端口，它将流量分发到后端的 ui 和正在 docker 镜像存储的 docker registry")]),t._v(" "),n("li",[t._v("**harbor-jobservice：**harbor-jobservice 是 harbor 的 job 管理模块，job 在 harbor 里面主要是为了镜像仓库之前同步使用的")]),t._v(" "),n("li",[n("strong",[t._v("harbor-ui：")]),t._v(" harbor-ui 是 web 管理页面，主要是前端的页面和后端 CURD 的接口")]),t._v(" "),n("li",[n("strong",[t._v("registry：")]),t._v(" registry 就是 docker 原生的仓库，负责保存镜像")]),t._v(" "),n("li",[n("strong",[t._v("harbor-adminserver：")]),t._v(" harbor-adminserver 是 harbor 系统管理接口，可以修改系统配置以及获取系统信息")]),t._v(" "),n("li",[n("strong",[t._v("harbor-db：")]),t._v(" harbor-db 是 harbor 的数据库，这里保存了系统的 job 以及项目、人员权限管理。由于本 harbor 的认证也是通过数据，在生产环节大多对接到企业的 ldap 中")]),t._v(" "),n("li",[n("strong",[t._v("harbor-log：")]),t._v(" harbor-log 是 harbor 的日志服务，统一管理 harbor 的日志。通过 inspect 可以看出容器统一将日志输出的 syslog")])]),t._v(" "),n("p",[t._v("这几个容器通过 Docker link 的形式连接在一起，这样，在容器之间可以通过容器名字互相访问。对终端用户而言，只需要暴露 proxy （即 Nginx）的服务端口。")]),t._v(" "),n("h3",{attrs:{id:"harbor-配置客户端"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-配置客户端"}},[t._v("#")]),t._v(" Harbor 配置客户端")]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("/etc/docker/daemon.json")]),t._v(" 中增加如下内容（如果文件不存在请新建该文件）")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://1c0pd0qz.mirror.aliyuncs.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.16.154.12:8082"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("该文件必须符合 JSON 规范，否则 Docker 将不能启动。")]),t._v(" "),n("p",[t._v("重启服务")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("systemctl daemon-reload\nsystemctl restart docker "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器多，需要时间")]),t._v("\n")])])]),n("p",[t._v("检查客户端配置是否生效")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker info\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ------信息如下-----------")]),t._v("\nInsecure Registries:\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.0/8\n")])])]),n("h3",{attrs:{id:"harbor-上传镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-上传镜像"}},[t._v("#")]),t._v(" Harbor 上传镜像")]),t._v(" "),n("p",[t._v("我们以推送 Nginx 为例，首先需要在 Harbor 上创建一个 "),n("strong",[t._v("公开/私有")]),t._v(" 的项目")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在项目中标记镜像：")]),t._v("\ndocker tag SOURCE_IMAGE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082/myshop/IMAGE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndocker tag nginx "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082/myshop/nginx:latest\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看标记的镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082/myshop/nginx   latest    231d40e811cd    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" weeks ago    126MB\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录 Harbor，私有项目需要登录")]),t._v("\ndocker login "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082 -u admin -p Harbor12345\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送镜像到当前项目")]),t._v("\ndocker push "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082/myshop/IMAGE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndocker push "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082/myshop/nginx:latest\n")])])]),n("p",[t._v("进入 Harbor 站点即可看到 push 的镜像了")]),t._v(" "),n("h3",{attrs:{id:"harbor-下载镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#harbor-下载镜像"}},[t._v("#")]),t._v(" Harbor 下载镜像")]),t._v(" "),n("p",[t._v("在其它机器下载镜像只需要配置好客户端即可")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker pull "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v(".154.12:8082/myshop/nginx:latest\n")])])]),n("h2",{attrs:{id:"mongo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongo"}},[t._v("#")]),t._v(" Mongo")]),t._v(" "),n("div",{staticClass:"language-yml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use root/example as user/password credentials")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mongo\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 27017"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MONGO_INITDB_ROOT_USERNAME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MONGO_INITDB_ROOT_PASSWORD")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" w111111\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./data/db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data/db\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /etc/localtime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/localtime\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongo-express")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mongo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("express\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8081"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ME_CONFIG_MONGODB_ADMINUSERNAME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ME_CONFIG_MONGODB_ADMINPASSWORD")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" w111111\n")])])]),n("p",[t._v("ports 一定要暴露，否则只能本地访问！")]),t._v(" "),n("h2",{attrs:{id:"网络配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络配置"}},[t._v("#")]),t._v(" 网络配置")]),t._v(" "),n("h3",{attrs:{id:"简介-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介-3"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),n("blockquote",[n("p",[t._v("注意：Compose 只能用于同一台服务器上网络共享，多台之间不可以，所以只能用于测试环境，生产环境需要 K8S")])]),t._v(" "),n("p",[t._v("默认情况下，Compose 会为我们的应用创建一个网络，服务的每个容器都会加入该网络中。这样，容器就可被该网络中的其他容器访问，不仅如此，"),n("strong",[t._v("该容器还能以服务名称作为 Hostname 被其他容器访问")]),t._v("。")]),t._v(" "),n("p",[t._v("默认情况下，应用程序的网络名称基于 Compose 的工程名称，而项目名称基于 "),n("code",[t._v("docker-compose.yml")]),t._v(" 所在目录的名称。如需修改工程名称，可使用 "),n("code",[t._v("--project-name")]),t._v(" 标识或 "),n("code",[t._v("COMPOSE_PORJECT_NAME")]),t._v(" 环境变量。")]),t._v(" "),n("p",[t._v("假如一个应用程序在名为 "),n("code",[t._v("myapp")]),t._v(" 的目录中，并且 "),n("code",[t._v("docker-compose.yml")]),t._v(" 如下所示：")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8000:8000"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n")])])]),n("p",[t._v("当我们运行 "),n("code",[t._v("docker-compose up")]),t._v(" 时，将会执行以下几步：")]),t._v(" "),n("ul",[n("li",[t._v("创建一个名为 "),n("strong",[t._v("myapp_default")]),t._v(" 的网络")]),t._v(" "),n("li",[t._v("使用 web 服务的配置创建容器，它以 "),n("strong",[t._v("web")]),t._v(" 这个名称加入网络 myapp_default")]),t._v(" "),n("li",[t._v("使用 db 服务的配置创建容器，它以 "),n("strong",[t._v("db")]),t._v(" 这个名称加入网络 myapp_default")])]),t._v(" "),n("p",[t._v("容器间可使用服务名称（web 或 db）作为 Hostname 相互访问。例如，web 这个服务可使用 "),n("code",[t._v("postgres://db:5432")]),t._v(" 访问 db 容器。")]),t._v(" "),n("p",[t._v("当服务的配置发生更改时，可使用 "),n("code",[t._v("docker-compose up")]),t._v(" 命令更新配置。此时，Compose 会删除旧容器并创建新容器。新容器会以不同的 IP 地址加入网络，名称保持不变。任何指向旧容器的连接都会被关闭，容器会重新找到新容器并连接上去。")]),t._v(" "),n("h3",{attrs:{id:"使用-links"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-links"}},[t._v("#")]),t._v(" 使用 links")]),t._v(" "),n("p",[t._v("默认情况下，服务之间可使用服务名称相互访问。links 允许我们定义一个别名，从而使用该别名访问其他服务。")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("links")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"db:database"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n")])])]),n("h3",{attrs:{id:"自定义网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义网络"}},[t._v("#")]),t._v(" 自定义网络")]),t._v(" "),n("p",[t._v("一些场景下，默认的网络配置满足不了我们的需求，此时我们可使用 "),n("code",[t._v("networks")]),t._v(" 命令自定义网络。networks 命令允许我们创建更加复杂的网络拓扑并指定自定义网络驱动和选项。不仅如此，我们还可使用 networks 将服务连接到不是由 Compose 管理的、外部创建的网络。")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("proxy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./proxy\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" front\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./app\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" front\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" back\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" back\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("front")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use a custom driver")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" custom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("driver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use a custom driver which takes special options")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" custom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("driver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver_opts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n")])])]),n("p",[t._v("其中，proxy 服务与 db 服务隔离，两者分别使用自己的网络；app 服务可与两者通信。使用 networks 命令，即可方便实现服务间的网络隔离与连接。")]),t._v(" "),n("h3",{attrs:{id:"配置默认网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置默认网络"}},[t._v("#")]),t._v(" 配置默认网络")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8000:8000"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use a custom driver")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" custom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("driver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),n("p",[t._v("这样，就可为该应用指定自定义的网络驱动")]),t._v(" "),n("h3",{attrs:{id:"已存在的网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#已存在的网络"}},[t._v("#")]),t._v(" 已存在的网络")]),t._v(" "),n("p",[t._v("我们可以预先创建一个名为 myapp 的网络，让 Compose 加入这个新创建的网络（配置文件配置如下），使所有 Compose 可以通信，此时使用 external 选项。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建网络")]),t._v("\ndocker network create "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Network Name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已存在的网络")]),t._v("\ndocker network list\n")])])]),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myapp\n")])])]),n("h2",{attrs:{id:"一次构建，到处运行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一次构建，到处运行"}},[t._v("#")]),t._v(" 一次构建，到处运行")]),t._v(" "),n("p",[t._v("从 Dockerfile 到 Docker Compose 的编写，到 push 到 Harbor")])])}),[],!1,null,null,null);s.default=e.exports}}]);