(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{564:function(t,s,e){"use strict";e.r(s);var v=e(2),a=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_3-jsp（不需要学了）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-jsp（不需要学了）"}},[t._v("#")]),t._v(" 3 JSP（不需要学了）")]),t._v(" "),e("h2",{attrs:{id:"jsp-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsp-简介"}},[t._v("#")]),t._v(" JSP 简介")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("JSP（java server pages）其实就是Servlet，用于简化Servlet的书写")]),t._v(" "),e("ul",[e("li",[t._v("Servlet：\n"),e("ul",[e("li",[t._v("优点：动态资源，可以编程")]),t._v(" "),e("li",[t._v('缺点：不适合设置html响应体，需要大量的response.getWriter().print("< html>")')])])]),t._v(" "),e("li",[t._v("html：\n"),e("ul",[e("li",[t._v("优点：不用为输出html标签而发愁")]),t._v(" "),e("li",[t._v("缺点：html是静态页面，不能包含动态信息")])])]),t._v(" "),e("li",[t._v("JSP：\n"),e("ul",[e("li",[t._v("优点：在原有html的基础上添加java脚本，构成jsp页面")])])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("JSP原理")])]),t._v(" "),e("ul",[e("li",[t._v("当"),e("strong",[t._v("jsp页面第一次被访问")]),t._v("时，"),e("strong",[t._v("服务器会把jsp编译成java文件")]),t._v("（这个java其实"),e("strong",[t._v("继承一个servlet")]),t._v("类）")]),t._v(" "),e("li",[t._v("然后再把"),e("strong",[t._v("java编译成.class")])]),t._v(" "),e("li",[t._v("然后"),e("strong",[t._v("创建该类JSP(Servlet)对象")])]),t._v(" "),e("li",[t._v("最后"),e("strong",[t._v("调用它的service()方法")]),t._v("（第二次请求同一jsp时，直接调用service()方法）")])])]),t._v(" "),e("li",[e("p",[t._v("JSP和Servlet的分工")]),t._v(" "),e("ul",[e("li",[t._v("Servlet：作为请求中"),e("strong",[t._v("处理数据")]),t._v("的环节")]),t._v(" "),e("li",[t._v("JSP：作为"),e("strong",[t._v("请求发起页面")]),t._v("，例如显示表单、超链接。作为"),e("strong",[t._v("请求结束页面")]),t._v("，例如显示数据")])])])]),t._v(" "),e("h2",{attrs:{id:"jsp的脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsp的脚本"}},[t._v("#")]),t._v(" JSP的脚本")]),t._v(" "),e("ul",[e("li",[t._v("JSP= html + Java脚本 + JSP标签(指令)")]),t._v(" "),e("li",[t._v("3种Java脚本：\n"),e("ul",[e("li",[e("code",[t._v("<%...%>")]),t._v("：定义的java代码，在service方法中。"),e("strong",[t._v("service方法")]),t._v("中可以定义什么，该脚本中就可以定义什么。")]),t._v(" "),e("li",[e("code",[t._v("<%=...%>")]),t._v("：定义的java代码，会输出到页面上。"),e("strong",[t._v("输出语句")]),t._v("中可以定义什么，该脚本中就可以定义什么")]),t._v(" "),e("li",[e("code",[t._v("<%!...%>")]),t._v("：定义的java代码，在jsp转换后的java"),e("strong",[t._v("类的成员位置")])])])]),t._v(" "),e("li",[e("code",[t._v("<%-- ... --%>")]),t._v("："),e("strong",[t._v("注释")]),t._v("，也可以注释HTML。当服务器把jsp编译成java文件时已经忽略了注释部分！"),e("strong",[t._v("不会发送至客户端")]),t._v(" "),e("ul",[e("li",[t._v("但是HTML中注释会发送并可以从查看源代码中找到，虽然页面中不显示")])])]),t._v(" "),e("li",[t._v("JSP对应的Java文件：java脚本直接显示，html输出用write，变量输出用print")])]),t._v(" "),e("h2",{attrs:{id:"jsp九大内置对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsp九大内置对象"}},[t._v("#")]),t._v(" JSP九大内置对象")]),t._v(" "),e("ul",[e("li",[t._v("pageContext（PageContext）：当前页面共享数据。页面上下文对象，可以获取其他8个对象，一个顶9个！")]),t._v(" "),e("li",[t._v("application（ServletContext）：整个应用程序，所有用户间共享数据")]),t._v(" "),e("li",[t._v("session（HttpSession）：一次会话的多个请求间。在JSP页面中设置"),e("code",[t._v("<%@page session=”false”%>")]),t._v("就不能使用Session")]),t._v(" "),e("li",[t._v("request（HttpServletRequest）：一次请求访问的多个资源（请求转发）")]),t._v(" "),e("li",[t._v("response（HttpServletResponse）：响应对象")]),t._v(" "),e("li",[t._v("out（JspWriter）：用来向客户端发送文本数据。"),e("strong",[t._v("先执行response.getWriter()，后执行out")])]),t._v(" "),e("li",[t._v("page（当前JSP的类型即Servlet对象）：当前JSP页面的“this”，即Servlet对象；")]),t._v(" "),e("li",[t._v("config（ServletConfig）：对应“真身”中的ServletConfig")]),t._v(" "),e("li",[t._v("exception（Throwable）：只有在错误页面中可以使用这个对象，即"),e("code",[t._v("isErrorPage")]),t._v("为true")])]),t._v(" "),e("blockquote",[e("p",[t._v("Servlet中有三大域，而JSP中有四大域，它就是最后一个域对象！")]),t._v(" "),e("ul",[e("li",[t._v("ServletContext：整个应用程序")]),t._v(" "),e("li",[t._v("session：整个会话(一个会话中只有一个用户)")]),t._v(" "),e("li",[t._v("request：一个请求链！")]),t._v(" "),e("li",[t._v("pageContext：一个jsp页面！这个域是在"),e("strong",[t._v("当前jsp页面")]),t._v("和当前jsp页面中使用的"),e("strong",[t._v("标签")]),t._v("之间共享数据！")])])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("PageContext域对象")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("代理其他域")]),t._v('：pageContext.setAttribute("xxx", "XXX", PageContext.SESSION_SCOPE);')])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("全域查找")]),t._v('：pageContext.findAttribute("xxx")；'),e("strong",[t._v("从小到大")]),t._v("，依次（四大域对象）查找！")])])])])]),t._v(" "),e("h2",{attrs:{id:"jsp三大指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsp三大指令"}},[t._v("#")]),t._v(" JSP三大指令")]),t._v(" "),e("p",[t._v("作用：用于"),e("strong",[t._v("配置JSP页面")]),t._v("，"),e("strong",[t._v("导入资源文件")]),t._v("。一个jsp页面中，可以有0~N个指令的定义！可以放在任意位置")]),t._v(" "),e("p",[t._v("格式："),e("code",[t._v("<%@ 指令名称 属性名1=属性值1 属性名2=属性值2 ... %>")])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("page")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("**"),e("code",[t._v("contentType")]),t._v("**和"),e("code",[t._v("pageEncoding")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("contentType")]),t._v("："),e("strong",[t._v("添加一个响应头，等同于")]),e("code",[t._v('response.setContentType("text/html;charset=utf-8");')])]),t._v(" "),e("li",[e("code",[t._v("pageEncoding")]),t._v("：它指定当前jsp页面的编码，在服务器要把jsp编译成.java时需要使用"),e("code",[t._v("pageEncoding")]),t._v("!")]),t._v(" "),e("li",[t._v("如果两个属性只提供一个，那么另一个的默认值为设置那一个。如果两个属性都没有，那么默认为iso")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("import")]),t._v("："),e("strong",[t._v("导包")]),t._v("！可以出现多次")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("language")]),t._v("：指定当前jsp编译后的语言类型，默认值为java。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("errorPage")]),t._v("和"),e("code",[t._v("isErrorPage")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("errorPage")]),t._v("：当前页面如果抛出异常，那么要转发到哪一个页面，由errorPage来指定")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("isErrorPage")]),t._v("：它指定当前页面是否为处理错误的页面！当该属性为true时，这个页面会设置状态码为500！而且这个页面可以使用9大内置对象中的**"),e("code",[t._v("exception")]),t._v("**!")]),t._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("error-page")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("error-code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("404"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("error-code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("location")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/error/errorPage.jsp"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("location")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("error-page")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("error-page")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("error-code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("500"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("error-code")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("location")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/error/errorPage.jsp"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("location")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("error-page")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("error-page")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exception-type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("java.lang.RuntimeException"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exception-type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("location")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/index.jsp"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("location")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("error-page")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("基本没用：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("autoFlush和buffer")]),t._v(" "),e("ul",[e("li",[t._v("autoFlush：指定jsp的输出流缓冲区满时，是否自动刷新！默认为true，如果为false，那么在缓冲区满时抛出异常！")]),t._v(" "),e("li",[t._v("buffer：指定缓冲区大小，默认为8kb，通常不需要修改！")])])]),t._v(" "),e("li",[e("p",[t._v("isELIgnored：是否忽略el表达式，默认值为false，不忽略，即支持！")])]),t._v(" "),e("li",[e("p",[t._v("info：信息！")])]),t._v(" "),e("li",[e("p",[t._v("isThreadSafe：当前的jsp是否支持并发访问！值为false，没人用")])]),t._v(" "),e("li",[e("p",[t._v("session：当前页面是否支持session，如果为false，那么当前页面就没有session这个内置对象！")])]),t._v(" "),e("li",[e("p",[t._v("extends：让jsp生成的servlet去继承该属性指定的类！")])])])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("include")]),t._v("：静态"),e("strong",[t._v("包含")])]),t._v(" "),e("ul",[e("li",[t._v("作用：把页面分解，使用包含的方式组合在一起，这样一个页面中不变的部分，就是一个独立jsp，而我们只需要处理变化的页面。")]),t._v(" "),e("li",[t._v("与RequestDispatcher的include()方法的功能相似！\n"),e("ul",[e("li",[e("code",[t._v("<%@include%>")]),t._v("它是在jsp编译成java文件时完成的！他们共同生成一个java文件，然后再生成一个class！")]),t._v(" "),e("li",[t._v("RequestDispatcher的"),e("code",[t._v("include()")]),t._v("是一个方法，包含和被包含的是两个servlet，即两个.class！他们只是把响应的内容在运行时合并了！")])])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("taglib")]),t._v("：导入标签库，"),e("code",[t._v('<%@taglib prefix="s" uri="/struts-tags"%> 前缀的用法< s:text>')])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("prefix")]),t._v("：指定标签库在本页面中的"),e("strong",[t._v("前缀")]),t._v("！自定义！")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("uri")]),t._v(": 指定标签库的"),e("strong",[t._v("位置")]),t._v("！")])])])])]),t._v(" "),e("blockquote",[e("p",[t._v("JSP动作标签")]),t._v(" "),e("p",[t._v("与html提供的标签有本质的区别，动作标签是由服务器来解释执行！它与java代码一样，都是在服务器端执行的！")]),t._v(" "),e("p",[t._v("html由浏览器来执行！")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<jsp:forward>")]),t._v("："),e("strong",[t._v("转发")]),t._v("！它与RequestDispatcher的forward方法是一样的，一个在Servlet中使用，一个在jsp中使用")]),t._v(" "),e("li",[e("code",[t._v("<jsp:include>")]),t._v("："),e("strong",[t._v("包含")]),t._v("：它与RequestDispatcher的include方法是一样的，一个在Servlet中使用，一个在jsp中使用\n"),e("ul",[e("li",[t._v("< %@include>和< jsp:include>有什么不同！")])])]),t._v(" "),e("li",[e("code",[t._v("<jsp:param>")]),t._v("：它用来作为forward和include的子标签！用来给转发或包含的页面传递参数！")])])]),t._v(" "),e("h2",{attrs:{id:"el表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#el表达式"}},[t._v("#")]),t._v(" EL表达式")]),t._v(" "),e("ol",[e("li",[t._v("概念："),e("strong",[t._v("EL（Expression Language）")]),t._v(" 表达式语言")]),t._v(" "),e("li",[t._v("作用："),e("strong",[t._v("替换")]),t._v("和"),e("strong",[t._v("简化jsp页面")]),t._v("中"),e("strong",[t._v("java代码的编写")]),t._v("。EL替代的是"),e("code",[t._v("<%= ... %>")]),t._v("，也就是说，"),e("strong",[t._v("EL只能做输出")])]),t._v(" "),e("li",[t._v("语法："),e("code",[t._v("${表达式}")])]),t._v(" "),e("li",[t._v("注意：")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("JSP默认支持EL表达式的")]),t._v("。如果要"),e("strong",[t._v("忽略")]),t._v("EL表达式\n"),e("ol",[e("li",[t._v("设置JSP中page指令中："),e("code",[t._v('isELIgnored="true"')]),t._v(" 忽略当前JSP页面中所有的EL表达式")]),t._v(" "),e("li",[e("code",[t._v("\\${表达式}")]),t._v(" ：忽略当前这个EL表达式")])])])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[e("p",[t._v("使用：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("运算")]),t._v("：")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("运算符：")]),t._v(" "),e("ol",[e("li",[t._v("算数运算符： "),e("code",[t._v("+")]),t._v(" "),e("code",[t._v("-")]),t._v(" "),e("code",[t._v("*")]),t._v(" "),e("code",[t._v("/(或div)")]),t._v(" "),e("code",[t._v("%(或mod)")])]),t._v(" "),e("li",[t._v("比较运算符： "),e("code",[t._v(">")]),t._v(" "),e("code",[t._v("<")]),t._v(" "),e("code",[t._v(">=")]),t._v(" "),e("code",[t._v("<=")]),t._v(" "),e("code",[t._v("==")]),t._v(" "),e("code",[t._v("!=")])]),t._v(" "),e("li",[t._v("逻辑运算符： "),e("code",[t._v("&&(或and)")]),t._v(" "),e("code",[t._v("||(或or)")]),t._v(" "),e("code",[t._v("!(或not)")])]),t._v(" "),e("li",[t._v("空运算符： "),e("code",[t._v("empty")])])]),t._v(" "),e("ul",[e("li",[t._v("功能：用于判断字符串、集合、数组对象是否为null或者长度是否为0")]),t._v(" "),e("li",[e("code",[t._v("${empty list}")]),t._v("：判断字符串、集合、数组对象是否为null或者长度为0")]),t._v(" "),e("li",[e("code",[t._v("${not empty str}")]),t._v("：表示判断字符串、集合、数组对象是否不为null 并且 长度>0")])])])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[e("strong",[t._v("获取值")])])]),t._v(" "),e("li",[e("p",[t._v("el表达式"),e("strong",[t._v("只能")]),t._v("从"),e("strong",[t._v("域对象")]),t._v("中获取值")])]),t._v(" "),e("li",[e("p",[t._v("语法：")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("${域名称.键名}")]),t._v("：从指定域中获取指定键的值")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("域名称：")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("pageScope")]),t._v("\t\t--\x3e pageContext")]),t._v(" "),e("li",[e("code",[t._v("requestScope")]),t._v(" \t--\x3e request")]),t._v(" "),e("li",[e("code",[t._v("sessionScope")]),t._v(" \t--\x3e session")]),t._v(" "),e("li",[e("code",[t._v("applicationScope")]),t._v(" --\x3e application（ServletContext）")])])]),t._v(" "),e("li",[e("p",[t._v("举例：在request域中存储了"),e("code",[t._v("name=张三")]),t._v("。获取："),e("code",[t._v("${requestScope.name}")]),t._v("，没有就展示空串\n2. "),e("code",[t._v("${键名}")]),t._v("：表示"),e("strong",[t._v("依次从最小的域中")]),t._v("查找是否有该键对应的值，直到找到为止。\n3. 获取对象、List集合、Map集合的值")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("对象")]),t._v("："),e("code",[t._v("${域名称.键名.属性名}")])]),t._v(" "),e("ul",[e("li",[t._v("本质上会去调用对象的"),e("code",[t._v("getter方法")]),t._v("。属性和成员变量不同，只有getter、setter方法的称"),e("strong",[t._v("逻辑视图")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("List")]),t._v("集合："),e("code",[t._v("${域名称.键名[索引]}")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Map")]),t._v("集合："),e("code",[t._v('${域名称.键名["key名称"]}')]),t._v("或"),e("code",[t._v("${域名称.键名.key名称}")])])])])])])])])]),t._v(" "),e("li",[e("p",[t._v("隐式对象：")]),t._v(" "),e("ul",[e("li",[t._v("el表达式中有11个隐式对象\n"),e("ul",[e("li",[e("strong",[t._v("pageContext")]),t._v("：\n"),e("ul",[e("li",[t._v("获取其他9个内置对象，有个cookie它获取不到")]),t._v(" "),e("li",[e("code",[t._v("${pageContext.request.contextPath}")]),t._v("：动态获取"),e("strong",[t._v("虚拟目录")])])])])])])])])])])]),t._v(" "),e("h2",{attrs:{id:"jstl标签库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jstl标签库"}},[t._v("#")]),t._v(" JSTL标签库")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("概念：JavaServer Pages Tag Library  "),e("strong",[t._v("JSP标准标签库")]),t._v("。是由Apache组织提供的开源的免费的jsp标签"),e("code",[t._v("<标签>")])])]),t._v(" "),e("li",[e("p",[t._v("作用：用于简化和替换jsp页面上的java代码")])]),t._v(" "),e("li",[e("p",[t._v("使用步骤：")]),t._v(" "),e("ol",[e("li",[t._v("导入jstl相关jar包")]),t._v(" "),e("li",[t._v("引入标签库，taglib指令：  "),e("code",[t._v("<%@ taglib %>")])]),t._v(" "),e("li",[t._v("使用标签")])])]),t._v(" "),e("li",[e("p",[t._v("常用的JSTL标签")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("if")]),t._v("：相当于java代码的if语句")]),t._v(" "),e("ol",[e("li",[t._v("属性："),e("code",[t._v("test")]),t._v("必须属性，接受boolean表达式\n"),e("ol",[e("li",[t._v("如果表达式为true，则显示if标签体内容，如果为false，则不显示标签体内容")]),t._v(" "),e("li",[t._v("一般情况下，test属性值会"),e("strong",[t._v("结合el表达式")]),t._v("一起使用")])])]),t._v(" "),e("li",[t._v("注意："),e("code",[t._v("c:if")]),t._v("标签"),e("strong",[t._v("没有else")]),t._v("情况，想要else情况，则可以在定义一个"),e("code",[t._v("c:if")]),t._v("标签")])]),t._v(" "),e("div",{staticClass:"language-jsp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<c:if test="${not empty list}">  <%-- number % 2 != 0 --%>\n    <p>遍历集合</p>\n</c:if>\n')])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("choose")]),t._v("：相当于java代码的switch语句")]),t._v(" "),e("ol",[e("li",[t._v("使用choose标签声明         \t\t\t相当于switch声明")]),t._v(" "),e("li",[t._v("使用when标签做判断         \t\t\t相当于case")]),t._v(" "),e("li",[t._v("使用otherwise标签做其他情况的声明    \t相当于default")])]),t._v(" "),e("div",{staticClass:"language-jsp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<c:set var="score" value="${param.score }"/>\n<c:choose>\n    <c:when test="${score > 100 || score < 0}">错误的分数：${score }</c:when>\n    <c:when test="${score >= 90 }">A级</c:when>\n    <c:when test="${score >= 80 }">B级</c:when>\n    <c:when test="${score >= 70 }">C级</c:when>\n    <c:when test="${score >= 60 }">D级</c:when>\n    <c:otherwise>E级</c:otherwise>\n</c:choose>\n')])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("foreach")]),t._v("：相当于java代码的for语句")]),t._v(" "),e("div",{staticClass:"language-jsp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<c:forEach var="i" begin="1" end="10" step="2">//循环变量、开始、结束、设置步长(默认1)\n    ${i}<br/>\n</c:forEach>\n//13579\n\n<c:forEach items="${strs }" var="str">//循环目标、变量\n    ${str }<br/>\n</c:forEach>\n\n//可以使用varStatus来创建循环状态变量，用于遍历容器   \n<c:forEach var="item" items="${ns }" varStatus="vs">\n    <c:if test="${vs.first }">第一行：</c:if>               \x3c!--first：是否为第一个元素--\x3e\n    <c:if test="${vs.last }">最后一行：</c:if>              \x3c!--last：是否为最后一个元素--\x3e\n    <c:out value="第${vs.count }行: "/>                     \x3c!--count：循环的次数，从1开始--\x3e\n    <c:out value="[${vs.index }]: "/>                      \x3c!--index：循环元素的索引--\x3e\n    <c:out value="name: ${vs.current }"/><br/>             \x3c!--current：当前元素。或直接用var变量--\x3e\n</c:forEach>\n')])])])])])])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("需求：在request域中有一个存有User对象的List集合。需要使用jstl+el将list集合数据展示到jsp页面的表格table中")]),t._v(" "),e("div",{staticClass:"language-jsp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<table border="1">\n    <tr>\n        <th>编号</th>\n        <th>姓名</th>\n        <th>年龄</th>\n        <th>生日</th>\n    </tr>\n    <c:forEach items="${list}" var="user" varStatus="s">\n        <tr>\n            <td>${s.count}</td>\n            <td>${user.name}</td>\n            <td>${user.age}</td>\n            <td>${user.birStr}</td>\n        </tr>\n    </c:forEach>\n</table>\n')])])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);